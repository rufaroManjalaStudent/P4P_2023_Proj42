<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="#stylesheet"?>
<!DOCTYPE doc [
<!ATTLIST xsl:stylesheet
id ID #REQUIRED>
]>
<rtlab>
<!--Start XSL-->
<xsl:stylesheet id="stylesheet"
        version="1.0"
        xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >

<xsl:template match="xsl:stylesheet" />

<!-- _____ ITEM ________________________________________-->
<xsl:template match="item">

        <!-- REPORT ITEM (ROOT ITEM) -->
    <xsl:if test="count(ancestor::item)=0">
        <html>
		<head>
			<link rel="stylesheet" type="text/css" href="css/tree.css" />
		</head>
		<body>
		<h1>RT-LAB Report</h1>
        <xsl:apply-templates />
		
		<script type="text/javascript">

		<![CDATA[
			var coll = document.getElementsByClassName("collapsible");
			var i;

			for (i = 0; i != coll.length; i++) {
			  coll[i].addEventListener("click", function() {
				this.classList.toggle("active");
				var content = this.nextElementSibling;
				if (content.style.display === "block") {
				  content.style.display = "none";
				} else {
				  content.style.display = "block";
				}
			  });
			}
		]]>
		
		</script>
		</body>
		</html>

    </xsl:if>

<!-- SECTION ITEM (SECOND LEVEL ITEM) -->
    <xsl:if test="(count(ancestor::item)=1)">
        
        <h2>
            <xsl:value-of select="concat(translate(substring(@name,1,1),'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ'),substring(@name,2))"/>
        </h2>
        <hr class="hidescreen" style="border:1px" width="100%"/>
       
        <div style="padding-top: 8px;">
        <xsl:attribute name="id"><xsl:value-of select="@name"/></xsl:attribute>
        <xsl:apply-templates select="item"/>
        <xsl:apply-templates select="property"/>
        <xsl:apply-templates select="textlog"/>
        </div>
    </xsl:if>


    <!-- ITEM -->
    <xsl:if test="count(ancestor::item)&gt;1">
		<button type="button" class="collapsible"><xsl:value-of select="@name"/></button>
        <div class="content">
			<!-- Display sub element -->
            <xsl:apply-templates select="property"/>
            <xsl:apply-templates select="item"/>
            <xsl:apply-templates select="textlog"/>
			&#160;
        </div>
    </xsl:if>
	
</xsl:template>

<!-- PROPERTY -->
<xsl:template match="property">
  <div>
  
    <!-- Add table -->  
    <table border="0" cellspacing="0" cellpadding="0">
      <!-- Add row to the table -->
      <tr>
        <!-- Add cell element to the row -->
        <td valign="middle" class="property" nowrap="true">
          <!-- Add text to the cell -->
          <xsl:if test="not(translate(@name,' ','')='')">
              <xsl:value-of select="@name"/>=
          </xsl:if>
          <xsl:value-of select="value"/>
        </td>
      </tr>
    </table>
  </div>
</xsl:template>

<!-- TEXTLOG -->
<xsl:template match="textlog">
  <div class="textlog">
    <!-- Add style attribute to DIV -->
    <xsl:attribute name="style">
      padding-left: 20px;
      cursor: text;
    </xsl:attribute>

    <!-- Add section -->

    <table>
    <div style="padding-top: 4px; padding-right: 10px;" onselectstart="return true;">
		<!-- Display log file -->
		<pre><xsl:call-template name="string-trim">
			<xsl:with-param name="string" select="."/>
		</xsl:call-template></pre>
    </div>
    </table>
  </div>
</xsl:template>

<xsl:variable name="whitespace" select="'&#09;&#10;&#13; '" />
<!-- Strips trailing whitespace characters from 'string' -->
<xsl:template name="string-rtrim">
    <xsl:param name="string" />
    <xsl:param name="trim" select="$whitespace" />

    <xsl:variable name="length" select="string-length($string)" />

    <xsl:if test="$length &gt; 0">
        <xsl:choose>
            <xsl:when test="contains($trim, substring($string, $length, 1))">
                <xsl:call-template name="string-rtrim">
                    <xsl:with-param name="string" select="substring($string, 1, $length - 1)" />
                    <xsl:with-param name="trim"   select="$trim" />
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="$string" />
            </xsl:otherwise>
        </xsl:choose>
    </xsl:if>
</xsl:template>
<!-- Strips leading whitespace characters from 'string' -->
<xsl:template name="string-ltrim">
    <xsl:param name="string" />
    <xsl:param name="trim" select="$whitespace" />

    <xsl:if test="string-length($string) &gt; 0">
        <xsl:choose>
            <xsl:when test="contains($trim, substring($string, 1, 1))">
                <xsl:call-template name="string-ltrim">
                    <xsl:with-param name="string" select="substring($string, 2)" />
                    <xsl:with-param name="trim"   select="$trim" />
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="$string" />
            </xsl:otherwise>
        </xsl:choose>
    </xsl:if>
</xsl:template>
<!-- Strips leading and trailing whitespace characters from 'string' -->
<xsl:template name="string-trim">
    <xsl:param name="string" />
    <xsl:param name="trim" select="$whitespace" />
    <xsl:call-template name="string-rtrim">
        <xsl:with-param name="string">
            <xsl:call-template name="string-ltrim">
                <xsl:with-param name="string" select="$string" />
                <xsl:with-param name="trim"   select="$trim" />
            </xsl:call-template>
        </xsl:with-param>
        <xsl:with-param name="trim"   select="$trim" />
    </xsl:call-template>
</xsl:template>

</xsl:stylesheet>
